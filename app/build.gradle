plugins {
    id 'final.app.application'
    id 'kotlin-kapt'
    id 'kotlinx-serialization'
    // kotlin-parcelize 插件，支持@Parcelize注解
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}


android {

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
            }
            res.srcDirs += 'src/main/res'
            res.srcDirs += 'src/main/res-green'
        }
    }

    buildTypes {
        release {
            minifyEnabled false //开启混淆
//            zipAlignEnabled false  //压缩优化
//            shrinkResources false  //移出无用资源
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 开启dataBinding数据绑定和viewBinding视图绑定
    buildFeatures {
        viewBinding true
        dataBinding true
    }

    android.applicationVariants.all { variant ->
        def appName = "Final"
        def buildType = variant.buildType.name
        def createTime = new Date().format("YYYY-MM-dd_HH.mm")
        def releasePathFile = new File(project.rootDir.absolutePath + "/app/publish/${variant.buildType.name}")
        def debugPathFile = new File(project.rootDir.absolutePath + "/app/publish/${variant.buildType.name}")
        def originalPath = variant.getPackageApplicationProvider().get().outputDirectory.getAsFile().get().getPath()
        variant.assembleProvider.get().doLast {
            // Release包命名规则是：APP名_创建时间_构建类型_版本号.apk
//            fileName = "${appName}_${createTime}_${buildType}_${defaultConfig.versionCode}.apk"
            // 将名字打印出来
//            println "文件名 -> : ${fileName}"

            if (buildType == "release") {
                copy {
                    from originalPath
                    duplicatesStrategy = DuplicatesStrategy.INCLUDE
                    include '**/*.apk'
                    into releasePathFile
                }
            } else {
                copy {
                    from originalPath
                    duplicatesStrategy = DuplicatesStrategy.INCLUDE
                    include '**/*.apk'
                    into debugPathFile
                }
            }
        }
    }
}

dependencies {
    implementation project(':library_base')
    implementation project(':library_network')
    implementation project(':feature-fluid-music')

    // Banner轮播库
    implementation(libs.banner.core)
    implementation(libs.shapeView.core)

    implementation(libs.verticalTablayout.core)

    // 设置库
    implementation(libs.preference.core)
    implementation(libs.preference.ktx)
    implementation(libs.androidxDocumentfile)

    implementation(libs.lottie.android)
    implementation(libs.lottieBottomNav.core)
    implementation(libs.titleBar.core)
}